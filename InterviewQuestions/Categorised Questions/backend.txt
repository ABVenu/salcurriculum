**JavaScript (JS):**
- Difference between HTTP 1.0 and HTTP 2.0
- OOPS in JS, pillars of OOPS
- Promises and the various API's like promise.each, promise.all, promise.settled etc.
- Event loop

**Advanced JavaScript (Adv JS):**

**Node.js:**
- Libraries of Node.js provide features as File Systems, Child Processes, Sockets,
- npm, node, MongoDB indexing
- What is Node.js?
- What is Node.js? Why do we use Node.js?
- Node.js as Single threaded
- How node.js achieves concurrency?
- Child processes in Node.js
- Event Loop
- Why Node.js is popular
- What is Node.js? Is it single threaded or multi threaded?
- Explain asynchronous and non-blocking nature of Node.js?
- How you handle errors in Node.js
- Security concerns of Node.js
- Why we use Node.js
- Node.js Proficiency

**Express.js:**
- Express? Why is it used over HTTP Methods?
- What is express, what is it used for?
- How would you create API routes in express?
- Middleware
- Question from backend (middleware)
- Why we use Express
- What is Express
- What type of dependencies and packages you have used to create an API
- What is Express.js?
- Create a basic server using express and implement a GET route, which returns a welcome message.
- Form validation in Express
- Library for form validation in Express
- Middlewares in express

**MongoDB:**
- MongoDB Queries
- Understanding the Aggregation Pipeline in MongoDB
- What is MongoDB
- How you have connected the Database in the project
- Database questions from the projects
- How to link 2 documents in MongoDB
- MongoDB in replica set
- MongoDB in aggregation, What is aggregation.
- How we integrate MongoDB with backend
- What can you do to improve MongoDB query performance.
- How to do indexing in MongoDB
- CRUD operations in MongoDB
- Sharding in MongoDB
- Aggregation in MongoDB
- What are triggers in MongoDB.
- What is Indexing in MongoDB
- What is Replication in MongoDB
- What is Sharding and Clusters in MongoDB
- MongoDB query to find users whose age is greater than 30.
- Write a mongoDB query to retrieve the users whose age is greater than 30?
- MongoDB in aggregation query
- Write a MongoDB query to find the user with the second largest age?
- What is MongoDB Compass?
- What is a collection in MongoDB?
- How to add a new key in a MongoDB document (for single and for the entire collection)?
- Schema design in an existing API
- Standards of MongoDB
- Features offered by MongoDB
- In SQL we can use JOINS to concatenate two tables, what is the alternative in MongoDB.
- What is transaction in MongoDB.
- Indexing in MongoDB

**Authentication & Security:**
- Authentication: token based
- Third party Authentication
- Explain Authentication, how is it different from Authorization
- Implement JWT authentication using a Node.js framework of your choice (e.g., Express.js).
- Proper implementation of JWT authentication with token generation and verification.
- Implement middleware to verify JWT authentication before allowing access.
- Successful implementation of middleware to verify JWT authentication.
- Proper restriction of API endpoint to authenticated users only.
- Authentication and Authorization
- What is Authentication & Authorization?
- How authentication works, how do you implement it
- How can you improve security of Backend application.
- Implement user authentication with Google Sign-In as the *only* provider using NextAuth.
- Validate the captcha from backend

**REST & APIs:**
- RESTful API?
- How you are fetching the data (from API or you have hardcoded)
- Retrieve the category list from the API endpoint: [https://dummyjson.com/products/categories](https://dummyjson.com/products/categories) through an API call.
- Fetch the product list from the API endpoint: [https://dummyjson.com/products/category/smartphones](https://dummyjson.com/products/category/smartphones) through an API call.
- Store the likes/dislikes based on the product ID in a local MySQL or MongoDB database using a Node.js API.
- Utilize Node.js and Express.js to create API routes.
- Fetch data from the provided public API (`https://api.publicapis.org/entries`).
- Successful integration of API endpoints for data retrieval.
- Create a new API endpoint that returns a message or data.
- Functional API route to retrieve account balance.
- Given an API, send a POST request using fetch.
- API fetch
- How do you send a secure API?
- How do you know if an API is secure or not?
- What is REST API?
- How do you identify REST API?
- What are different types of APIs like REST, SOAP, GraphQL etc.?
- What are different HTTP methods in REST API?
- What are the steps to create an API
- What is the difference between Rest API and GraphQL
- HTTP Methods
- HTTP methods and status codes.
- What are the HTTPS methods and codes?
- Types of API
- What do you know about API Integration

**Performance & Testing:**
- How will you improve API loading time?
- How can you stress test a server?
- Write unit tests for critical parts of your code (e.g., authentication logic, CRUD operations).
- What is API Testing?

**Other Questions (General Backend & Related Topics):**
- Project Showcase? Is it Static or Dynamic? JSON Server?
- How is your backend working
- AWS Knowledge
- Project presentation (asked questions around implementation, routes, middleware)
- If we download anything using npm where the files are getting stored and where the version is getting stored and if there are any sensitive info where to keep that info.
- What are databases?
- Integrate Swagger JS with your Node.js application.
- Document all API endpoints, including request parameters and responses.
- Proper integration of Swagger JS with the Node.js application.
- Clear and comprehensive documentation of all API endpoints.
- AWS and Firebase
- What is NPM, how can you identify vulnerable npm packages.
- What is Tomcat Server?
- What are different design patterns?
- Difference between Microservices and Monolithic architecture
- Frontend or Backend
- Event loop very deep
- Event loop handling promises?
- What is event loop in Node.js?
- Streams in Node.js
- How to implement pagination support in backend.
- DSA Questions https://leetcode.com/problems/remove-k-digits/description/
- If you want to get the live data from the server how you will do it.
- How do you handle the server if it is taking time to fetch the live data.

